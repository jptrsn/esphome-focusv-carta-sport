esphome:
  name: carta-sport-monitor
  platform: ESP32
  board: esp32dev

logger:
api:
ota:

wifi:
  ssid: "your_wifi_ssid"
  password: "your_wifi_password"

# Required for BLE functionality
esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1000ms
    active: true

# Import from your GitHub repo
external_components:
  - source: github://yourusername/your-repo-name
    components: [ carta_sport ]

# Discover Carta Sport devices with device name sensor
carta_sport:
  id: carta_discovery
  # Optional: specify MAC address
  # mac_address: "AA:BB:CC:DD:EE:FF"

  # Device name sensor - automatically populated when device is discovered
  device_name:
    name: "Carta Sport Device Name"
    id: carta_device_name

# Use regular BLE client with discovered/specified MAC
ble_client:
  - mac_address: "AA:BB:CC:DD:EE:FF"  # Replace with your device's MAC
    id: my_carta_sport

# Or if you want to use auto-discovery, you'll need to manually update
# the MAC address once the discovery component finds it

# Use with standard BLE client sensors
sensor:
  - platform: ble_client
    type: rssi
    ble_client_id: my_carta_sport
    name: "Carta Sport Signal Strength"

  # Example characteristic sensor (adjust UUIDs based on your device)
  - platform: ble_client
    type: characteristic
    ble_client_id: my_carta_sport
    name: "Carta Sport Battery"
    service_uuid: "180F"
    characteristic_uuid: "2A19"
    unit_of_measurement: "%"

binary_sensor:
  - platform: ble_client
    ble_client_id: my_carta_sport
    name: "Carta Sport Connected"

# Text sensor to show discovered MAC address
text_sensor:
  - platform: template
    name: "Discovered Carta Sport MAC"
    lambda: |-
      if (id(carta_discovery).has_discovered_device()) {
        return id(carta_discovery).get_discovered_mac_address();
      }
      return {"Not found"};
    update_interval: 10s

  # The device name sensor is automatically created above in carta_sport config
  # No need to define it separately - it will show the actual device name